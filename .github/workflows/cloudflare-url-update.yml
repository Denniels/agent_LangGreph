name: 🔄 Auto-Update Cloudflare URLs

on:
  schedule:
    # Ejecutar cada 5 minutos para detectar cambios rápidamente
    - cron: '*/5 * * * *'
  
  # Permitir ejecución manual
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Forzar actualización de URLs'
        required: false
        default: false
        type: boolean

  # Ejecutar cuando se detecten cambios en archivos relevantes
  push:
    paths:
      - 'modules/utils/cloudflare_url_manager.py'
      - 'modules/utils/jetson_url_config.py'
      - 'url_update_automation.py'

jobs:
  update-cloudflare-urls:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: 🔍 Check for URL changes
      id: check_changes
      run: |
        echo "Starting Cloudflare URL check..."
        
        # Ejecutar el script de automatización
        if [ "${{ github.event.inputs.force_update }}" == "true" ]; then
          echo "🔄 Forcing URL update..."
          python url_update_automation.py --update --force
        else
          echo "🔍 Checking for URL changes..."
          python url_update_automation.py --update
        fi
        
        # Verificar si hay cambios en git
        if git diff --quiet && git diff --cached --quiet; then
          echo "changes_detected=false" >> $GITHUB_OUTPUT
          echo "✅ No changes detected"
        else
          echo "changes_detected=true" >> $GITHUB_OUTPUT
          echo "🚨 Changes detected!"
          
          # Mostrar los archivos que cambiaron
          echo "Files changed:"
          git diff --name-only
          git diff --cached --name-only
        fi

    - name: 📊 Generate change report
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        echo "## 🔄 Cloudflare URL Update Report" > update_report.md
        echo "" >> update_report.md
        echo "**Timestamp:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> update_report.md
        echo "" >> update_report.md
        
        # Obtener la URL actual
        python -c "
        try:
            from modules.utils.jetson_url_config import get_current_jetson_url
            print(f'**New URL:** {get_current_jetson_url()}')
        except Exception as e:
            print(f'**Error getting URL:** {e}')
        " >> update_report.md
        
        echo "" >> update_report.md
        echo "**Files modified:**" >> update_report.md
        git diff --name-only | sed 's/^/- /' >> update_report.md
        
        echo "" >> update_report.md
        echo "**Triggered by:** GitHub Actions (Automated)" >> update_report.md
        echo "" >> update_report.md
        echo "---" >> update_report.md
        echo "*This update was performed automatically by the Cloudflare URL monitoring system.*" >> update_report.md

    - name: 🔧 Configure Git
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Cloudflare URL Auto-Update"

    - name: 💾 Commit and push changes
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        # Agregar todos los archivos modificados
        git add .
        
        # Obtener información para el commit
        CURRENT_URL=$(python -c "
        try:
            from modules.utils.jetson_url_config import get_current_jetson_url
            print(get_current_jetson_url())
        except:
            print('unknown-url')
        ")
        
        COMMIT_MSG="🔄 Auto-update Cloudflare URL to ${CURRENT_URL}

        - Detected URL change via automated monitoring
        - Updated all references automatically
        - Triggered at $(date -u '+%Y-%m-%d %H:%M:%S UTC')
        - Auto-generated by GitHub Actions"
        
        # Hacer commit
        git commit -m "$COMMIT_MSG"
        
        echo "✅ Changes committed successfully"

    - name: 🚀 Push changes
      if: steps.check_changes.outputs.changes_detected == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

    - name: 📢 Post-update notification
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        echo "🎉 Cloudflare URL update completed successfully!"
        echo "📊 Summary:"
        echo "  - New URL detected and updated"
        echo "  - All files synchronized"
        echo "  - Changes pushed to repository"
        echo "  - Streamlit Cloud will auto-deploy new version"
        
        # Validar que el sistema funcione
        python -c "
        try:
            from modules.utils.jetson_url_config import validate_jetson_url, get_current_jetson_url
            url = get_current_jetson_url()
            valid = validate_jetson_url()
            print(f'✅ Final validation: URL {url} is {'valid' if valid else 'invalid'}')
        except Exception as e:
            print(f'❌ Validation error: {e}')
        "

    - name: ℹ️ No changes notification
      if: steps.check_changes.outputs.changes_detected == 'false'
      run: |
        echo "ℹ️ No Cloudflare URL changes detected"
        echo "✅ System is up to date"
        
        # Mostrar estado actual
        python -c "
        try:
            from modules.utils.jetson_url_config import get_current_jetson_url, validate_jetson_url
            url = get_current_jetson_url()
            valid = validate_jetson_url()
            print(f'📊 Current URL: {url}')
            print(f'🔍 Status: {'healthy' if valid else 'unhealthy'}')
        except Exception as e:
            print(f'❌ Error: {e}')
        "

  # Job adicional para notificaciones (opcional)
  notify-on-failure:
    runs-on: ubuntu-latest
    needs: update-cloudflare-urls
    if: failure()
    
    steps:
    - name: 🚨 Failure notification
      run: |
        echo "❌ Cloudflare URL update failed!"
        echo "🔧 Manual intervention may be required"
        echo "📅 Failed at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        
        # Aquí se puede agregar notificación a Slack, Discord, etc.
        # Por ejemplo (requiere configurar SLACK_WEBHOOK_URL en secrets):
        # curl -X POST -H 'Content-type: application/json' \
        #   --data '{"text":"🚨 Cloudflare URL update failed in agent_LangGreph"}' \
        #   "$SLACK_WEBHOOK_URL"